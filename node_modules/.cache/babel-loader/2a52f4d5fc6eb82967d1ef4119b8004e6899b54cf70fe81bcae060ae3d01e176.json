{"ast":null,"code":"var _jsxFileName = \"/Users/sanyamkoul/Documents/Web_App/Resume/src/Components/CircularProgressBar.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CircularProgressBar = props => {\n  const myTime = props.myTime;\n  console.log(myTime);\n  const circumference = 2 * Math.PI * 50; // Assuming the radius of the circle is 50\n\n  const calculateOffset = percentage => {\n    const progressOffset = (100 - percentage) / 100 * circumference;\n    return progressOffset;\n  };\n  const renderProgress = () => {\n    var offset = 0;\n    return myTime.map((item, index) => {\n      const progressColor = item.Color;\n      const progressPercentage = item.Percentage;\n      const dashArray = `${circumference} ${circumference}`;\n      console.log(progressPercentage);\n      console.log(offset);\n      const dashOffset = calculateOffset(progressPercentage) - offset;\n      offset += calculateOffset(progressPercentage);\n      return /*#__PURE__*/_jsxDEV(\"circle\", {\n        className: \"progress-ring__circle\",\n        cx: \"50\",\n        cy: \"50\",\n        r: \"50\",\n        fill: \"transparent\",\n        stroke: progressColor,\n        strokeWidth: \"10\",\n        strokeDasharray: dashArray,\n        strokeDashoffset: dashOffset\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    className: \"progress-ring\",\n    viewBox: \"0 0 100 100\",\n    children: renderProgress()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c = CircularProgressBar;\nexport default CircularProgressBar;\nvar _c;\n$RefreshReg$(_c, \"CircularProgressBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CircularProgressBar","props","myTime","console","log","circumference","Math","PI","calculateOffset","percentage","progressOffset","renderProgress","offset","map","item","index","progressColor","Color","progressPercentage","Percentage","dashArray","dashOffset","className","cx","cy","r","fill","stroke","strokeWidth","strokeDasharray","strokeDashoffset","fileName","_jsxFileName","lineNumber","columnNumber","viewBox","children","_c","$RefreshReg$"],"sources":["/Users/sanyamkoul/Documents/Web_App/Resume/src/Components/CircularProgressBar.js"],"sourcesContent":["import React from 'react';\n\nconst CircularProgressBar = (props) => {\n\n    const myTime = props.myTime;\n    console.log(myTime)\n    const circumference = 2 * Math.PI * 50; // Assuming the radius of the circle is 50\n\n    const calculateOffset = (percentage) => {\n        const progressOffset = ((100 - percentage) / 100) * circumference;\n        return progressOffset;\n    };\n\n    const renderProgress = () => {\n        var offset = 0;\n\n        return myTime.map((item, index) => {\n        const progressColor = item.Color;\n        const progressPercentage = item.Percentage;\n        const dashArray = `${circumference} ${circumference}`;\n        console.log(progressPercentage)\n        console.log(offset)\n        const dashOffset = calculateOffset(progressPercentage) - offset;\n\n        offset += calculateOffset(progressPercentage);\n\n        return (\n            <circle\n            key={index}\n            className=\"progress-ring__circle\"\n            cx=\"50\"\n            cy=\"50\"\n            r=\"50\"\n            fill=\"transparent\"\n            stroke={progressColor}\n            strokeWidth=\"10\"\n            strokeDasharray={dashArray}\n            strokeDashoffset={dashOffset}\n            />\n        );\n    });\n  };\n\n  return (\n    <svg className=\"progress-ring\" viewBox=\"0 0 100 100\">\n      {renderProgress()}\n    </svg>\n  );\n};\n\nexport default CircularProgressBar;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;EAEnC,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAAM;EAC3BC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,MAAMG,aAAa,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAG,EAAE,CAAC,CAAC;;EAExC,MAAMC,eAAe,GAAIC,UAAU,IAAK;IACpC,MAAMC,cAAc,GAAI,CAAC,GAAG,GAAGD,UAAU,IAAI,GAAG,GAAIJ,aAAa;IACjE,OAAOK,cAAc;EACzB,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzB,IAAIC,MAAM,GAAG,CAAC;IAEd,OAAOV,MAAM,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACnC,MAAMC,aAAa,GAAGF,IAAI,CAACG,KAAK;MAChC,MAAMC,kBAAkB,GAAGJ,IAAI,CAACK,UAAU;MAC1C,MAAMC,SAAS,GAAI,GAAEf,aAAc,IAAGA,aAAc,EAAC;MACrDF,OAAO,CAACC,GAAG,CAACc,kBAAkB,CAAC;MAC/Bf,OAAO,CAACC,GAAG,CAACQ,MAAM,CAAC;MACnB,MAAMS,UAAU,GAAGb,eAAe,CAACU,kBAAkB,CAAC,GAAGN,MAAM;MAE/DA,MAAM,IAAIJ,eAAe,CAACU,kBAAkB,CAAC;MAE7C,oBACInB,OAAA;QAEAuB,SAAS,EAAC,uBAAuB;QACjCC,EAAE,EAAC,IAAI;QACPC,EAAE,EAAC,IAAI;QACPC,CAAC,EAAC,IAAI;QACNC,IAAI,EAAC,aAAa;QAClBC,MAAM,EAAEX,aAAc;QACtBY,WAAW,EAAC,IAAI;QAChBC,eAAe,EAAET,SAAU;QAC3BU,gBAAgB,EAAET;MAAW,GATxBN,KAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUT,CAAC;IAEV,CAAC,CAAC;EACJ,CAAC;EAED,oBACEnC,OAAA;IAAKuB,SAAS,EAAC,eAAe;IAACa,OAAO,EAAC,aAAa;IAAAC,QAAA,EACjDzB,cAAc,CAAC;EAAC;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV,CAAC;AAACG,EAAA,GA9CIrC,mBAAmB;AAgDzB,eAAeA,mBAAmB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}